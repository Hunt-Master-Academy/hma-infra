# HMA Compliance Stack - Minimal CISO Assistant Only
# Start with CISO Assistant, add Wazuh once stable

services:
  # ============================================================================
  # CISO ASSISTANT - GRC/ISMS/COMPLIANCE PLATFORM
  # ============================================================================
  
  # CISO Assistant Backend (Django/Python)
  hma-ciso-backend:
    image: ghcr.io/intuitem/ciso-assistant-community/backend:latest
    container_name: hma_ciso_backend
    restart: unless-stopped
    environment:
      # Database connection (shared PostgreSQL)
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: ciso_assistant
      DB_USER: ciso_admin
      DB_PASSWORD: ${CISO_DB_PASSWORD:-change_me_ciso_db_pass}
      DB_HOST: postgres
      DB_PORT: 5432
      
      # Django configuration
      DJANGO_SECRET_KEY: ${CISO_DJANGO_SECRET:-change_me_to_50_char_random_string}
      DJANGO_DEBUG: "False"
      DJANGO_ALLOWED_HOSTS: localhost,127.0.0.1,hma-ciso-backend,hma_ciso_backend
      DJANGO_SUPERUSER_EMAIL: ${CISO_ADMIN_EMAIL:-admin@huntmasteracademy.com}
      DJANGO_SUPERUSER_PASSWORD: ${CISO_ADMIN_PASSWORD:-change_me_admin_pass}
      
      # S3/MinIO for evidence storage
      AWS_ACCESS_KEY_ID: ${MINIO_USER:-minioadmin}
      AWS_SECRET_ACCESS_KEY: ${MINIO_PASSWORD:-minioadmin}
      AWS_S3_ENDPOINT_URL: http://minio:9000
      AWS_STORAGE_BUCKET_NAME: hma-compliance-evidence
      AWS_S3_REGION_NAME: us-east-1
      AWS_S3_USE_SSL: "false"
      
      # Application settings
      CISO_ASSISTANT_URL: http://localhost:8000
      CISO_ASSISTANT_SUPERUSER_EMAIL: ${CISO_ADMIN_EMAIL:-admin@huntmasteracademy.com}
      
    ports:
      - "8000:8000"
    volumes:
      - ciso_media:/app/media
      - ciso_static:/app/static
    networks:
      - hma-network
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--database", "default"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # CISO Assistant Frontend (SvelteKit/Node.js)
  hma-ciso-frontend:
    image: ghcr.io/intuitem/ciso-assistant-community/frontend:latest
    container_name: hma_ciso_frontend
    restart: unless-stopped
    environment:
      PUBLIC_BACKEND_API_URL: http://hma-ciso-backend:8000/api
      ORIGIN: http://localhost:3000
      BODY_SIZE_LIMIT: Infinity
    ports:
      - "3005:3000"
    networks:
      - hma-network
    depends_on:
      hma-ciso-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

volumes:
  # CISO Assistant volumes
  ciso_media:
    driver: local
  ciso_static:
    driver: local

networks:
  hma-network:
    external: true

# ============================================================================
# DEPLOYMENT INSTRUCTIONS
# ============================================================================
#
# 1. Initialize database and storage:
#    ./scripts/init-compliance-dbs.sh
#    ./scripts/init-compliance-storage.sh
#
# 2. Deploy minimal stack:
#    docker compose -f docker-compose.compliance-minimal.yml up -d
#
# 3. Check service health:
#    docker compose -f docker-compose.compliance-minimal.yml ps
#
# 4. Initialize CISO Assistant:
#    docker exec hma_ciso_backend python manage.py migrate
#    docker exec hma_ciso_backend python manage.py createsuperuser
#    docker exec hma_ciso_backend python manage.py loaddata frameworks
#
# 5. Access CISO Assistant:
#    Frontend: http://localhost:3005
#    Backend API: http://localhost:8000
#
