# HMA Secrets Management Infrastructure - HashiCorp Vault
# Phase 1: Foundation - Centralized Secrets with Auto-Rotation

services:
  # Vault - Secrets management and encryption as a service
  vault:
    image: hashicorp/vault:1.15
    container_name: hma_vault
    restart: unless-stopped
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_ADDR: http://0.0.0.0:8200
      VAULT_API_ADDR: http://0.0.0.0:8200
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_ROOT_TOKEN:-hma_dev_root_token}
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      # PostgreSQL storage backend (production mode - commented out for dev)
      # VAULT_LOCAL_CONFIG: |
      #   storage "postgresql" {
      #     connection_url = "postgres://hma_admin:${DB_PASSWORD:-development_password}@postgres:5432/vault?sslmode=disable"
      #   }
      #   listener "tcp" {
      #     address = "0.0.0.0:8200"
      #     tls_disable = 1
      #   }
      #   api_addr = "http://vault:8200"
      #   ui = true
    ports:
      - "8200:8200"
    volumes:
      - vault_data:/vault/file
      - vault_logs:/vault/logs
      - vault_config:/vault/config
    networks:
      - hma-network
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Vault Initializer - Initializes Vault and creates initial secrets
  vault-init:
    image: hashicorp/vault:1.15
    container_name: hma_vault_init
    restart: "no"
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: ${VAULT_ROOT_TOKEN:-hma_dev_root_token}
      DB_PASSWORD: ${DB_PASSWORD:-development_password}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-development_redis}
      MINIO_USER: ${MINIO_USER:-minioadmin}
      MINIO_PASSWORD: ${MINIO_PASSWORD:-minioadmin}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-min-32-characters-long}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-sk_test_placeholder}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-placeholder}
    volumes:
      - ./scripts/init-vault.sh:/tmp/init-vault.sh:ro
    networks:
      - hma-network
    depends_on:
      vault:
        condition: service_healthy
    entrypoint: ["/bin/sh"]
    command:
      - -c
      - |
        echo "‚è≥ Waiting for Vault to be ready..."
        sleep 10
        echo "üöÄ Running Vault initialization..."
        cp /tmp/init-vault.sh /init-vault.sh
        chmod +x /init-vault.sh
        /init-vault.sh

volumes:
  vault_data:
    driver: local
  vault_logs:
    driver: local
  vault_config:
    driver: local

networks:
  hma-network:
    external: true

# Usage Instructions:
# 1. Start Vault in dev mode:
#    docker compose -f docker-compose.vault.yml up -d
#
# 2. Access Vault UI:
#    http://localhost:8200
#    Token: hma_dev_root_token (dev mode)
#
# 3. Login to Vault CLI:
#    export VAULT_ADDR='http://localhost:8200'
#    export VAULT_TOKEN='hma_dev_root_token'
#    vault status
#
# 4. Write a secret:
#    vault kv put secret/hma/database \
#      host=postgres \
#      port=5432 \
#      database=hma_academy \
#      username=hma_admin \
#      password=development_password
#
# 5. Read a secret:
#    vault kv get secret/hma/database
#    vault kv get -format=json secret/hma/database | jq -r .data.data.password
#
# 6. Enable database secrets engine (auto-rotation):
#    vault secrets enable database
#    vault write database/config/postgresql \
#      plugin_name=postgresql-database-plugin \
#      allowed_roles="hma-brain,hma-api" \
#      connection_url="postgresql://{{username}}:{{password}}@postgres:5432/hma_academy?sslmode=disable" \
#      username="hma_admin" \
#      password="development_password"
#
# 7. Create role for dynamic credentials:
#    vault write database/roles/hma-brain \
#      db_name=postgresql \
#      creation_statements="CREATE ROLE \"{{name}}\" WITH LOGIN PASSWORD '{{password}}' VALID UNTIL '{{expiration}}' INHERIT; GRANT ALL ON DATABASE hma_academy TO \"{{name}}\";" \
#      default_ttl="1h" \
#      max_ttl="24h"
#
# 8. Generate dynamic credentials:
#    vault read database/creds/hma-brain
#
# Production Notes:
# - Replace VAULT_DEV_ROOT_TOKEN with secure token
# - Enable PostgreSQL storage backend for persistence
# - Enable audit logging: vault audit enable file file_path=/vault/logs/audit.log
# - Setup auto-unseal with AWS KMS or Transit secrets engine
# - Configure TLS certificates for HTTPS
