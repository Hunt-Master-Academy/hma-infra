# File: docker-compose.production.yml
# Enhanced stack with backup capabilities
version: '3.8'

services:
  # PostgreSQL with backup support
  postgres:
    image: postgres:15-alpine
    container_name: huntmaster-postgres
    environment:
      POSTGRES_DB: huntmaster
      POSTGRES_USER: huntmaster
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--data-checksums"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backups/postgres:/backups
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U huntmaster"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis with persistence
  redis:
    image: redis:7-alpine
    container_name: huntmaster-redis
    volumes:
      - redis-data:/data
      - ./backups/redis:/backups
    ports:
      - "6379:6379"
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --save 60 1000
      --save 300 10
      --save 900 1
    restart: unless-stopped

  # Automated backup service
  backup:
    build:
      context: .
      dockerfile: Dockerfile.backup
    container_name: huntmaster-backup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./backups:/backups
      - backup-logs:/var/log/backup
    environment:
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}
      - RETENTION_DAYS=${RETENTION_DAYS:-7}
      - S3_BUCKET=${S3_BUCKET:-}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
    depends_on:
      - postgres
      - redis
      - minio
    restart: unless-stopped

  # MinIO for local S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: huntmaster-minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    volumes:
      - minio-data:/data
      - ./backups/minio:/backups
    restart: unless-stopped

  # Monitoring for backup health
  prometheus:
    image: prom/prometheus:latest
    container_name: huntmaster-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped

volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/postgres
  
  redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/redis
  
  minio-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/minio
  
  backup-logs:
    driver: local
  
  prometheus-data:
    driver: local